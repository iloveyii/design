{"version":3,"sources":["banner.png","serviceWorker.js","common/behaviour.js","components/Header.js","components/Services.js","components/Banner.js","components/Card.js","types/News.js","actions/NewsAction.js","types/Interesting.js","actions/InterestingAction.js","types/International.js","actions/InternationalAction.js","components/Cards.js","components/Ni/index.js","App.js","registerServiceWorker.js","types/Science.js","types/Mazahia.js","api/feed.js","sagas/newsSagas.js","sagas/interestingSagas.js","sagas/internationalSagas.js","actions/ScienceAction.js","sagas/scienceSagas.js","actions/MazahiaAction.js","sagas/mazahiaSagas.js","sagas/rootSaga.js","reducers/NewsReducer.js","reducers/InterestingReducer.js","reducers/InternationalReducer.js","reducers/ScienceReducer.js","reducers/MazahiaReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ENVIRONMENT","Header","react_default","a","createElement","id","className","Link","to","src","alt","React","Component","Services","style","Styles","parraImg","roundImg","background","width","height","Banner","banner","Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expanded","expand","bind","assertThisInitialized","setState","item","image","title","onClick","contentSnippet","trim","NEWS_READ","newsReadAction","newsId","type","payload","newsReadSuccessAction","news","newsReadFailAction","INTERESTING_READ","interestingReadAction","console","log","interestingReadSuccessAction","interesting","interestingReadFailAction","INTERNATIONAL_READ","internationalReadAction","internationalReadSuccessAction","international","internationalReadFailAction","Cards","items","getData","nextProps","science","mazahia","pathname","Array","isArray","slice","length","map","i","components_Card","key","mapActionsToProps","withRouter","connect","Ni","App","components_Header","Switch","Route","exact","path","component","components_Banner","SCIENCE_READ","MAZAHIA_READ","feed","axios","get","then","res","data","catch","error","Error","newsReadSaga","action","resp","regenerator_default","wrap","_context","prev","next","api","sent","put","t0","stop","_marked","interestingReadSaga","interestingSagas_marked","internationalReadSaga","internationalSagas_marked","scienceReadSuccessAction","scienceReadFailAction","scienceReadSaga","scienceSagas_marked","mazahiaReadSuccessAction","mazahiaReadFailAction","mazahiaReadSaga","mazahiaSagas_marked","rootSaga","takeLatest","rootSaga_marked","initState","NewsReducer","arguments","undefined","InterestingReducer","ScienceReducer","MazahiaReducer","allReducers","combineReducers","InternationalReducer","sagaMiddleware","createSagaMiddleware","allStoreEnhancers","navigator","userAgent","includes","devToolsExtension","compose","applyMiddleware","store","createStore","run","getState","dispatch","mazahiaReadAction","subscribe","ReactDOM","render","BrowserRouter","es","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sOCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBC,IAEMC,GACH,iEC6CKC,mLA3CP,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACJH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,KACNN,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,SACNN,EAAAC,EAAAC,cAAA,sBAGRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,gBACNN,EAAAC,EAAAC,cAAA,6BAGRF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,YACNN,EAAAC,EAAAC,cAAA,4BAOpBF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OAAKK,IAAI,+BAA+BH,UAAU,WAAWI,IAAI,SACjER,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAAhB,sBACAJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,kCApCPK,IAAMC,WCArBC,mLAEE,OACIX,EAAAC,EAAAC,cAAA,WAASC,GAAG,YACRH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UAEAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,SACNN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,qCAIZH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,gBACNN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOE,SACdX,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,uCAIZH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,YACNN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,4CAOhBH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,kBACNN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,0EAIZH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAI,YACNN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOE,SACdX,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,uCAIZH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,0BAMZH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,oCAGRH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOE,SACdX,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,sCAGRH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,KAAGU,MAAOC,EAAOC,SACdV,UAAU,sBACbJ,EAAAC,EAAAC,cAAA,KAAGC,GAAG,OAAN,mCAvFTM,IAAMC,WAmGvBG,EAAS,CACXE,SAAU,CACNC,WAAY,2CACZC,MAAO,OACPC,OAAQ,QAGZJ,SAAU,CACNE,WAAY,4CACZC,MAAO,OACPC,OAAQ,SAGDP,qBC9FAQ,mLAhBP,OACInB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKK,IAAKa,IAAQhB,UAAU,WAAWI,IAAI,SAC3CR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,0DATPO,IAAMC,mBCqCZW,cArCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,UAAU,GACzBR,EAAKS,OAAST,EAAKS,OAAOC,KAAZT,OAAAU,EAAA,EAAAV,CAAAD,IAHCA,wEAOfG,KAAKS,SAAS,CAAEJ,UAAWL,KAAKI,MAAMC,4CAIjC,IACGK,EAASV,KAAKJ,MAAdc,KACR,OACIpC,EAAAC,EAAAC,cAAA,WAASC,GAAG,SACRH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKK,IAAK6B,EAAKC,MAAO7B,IAAI,WAE9BR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAQJ,EAAAC,EAAAC,cAAA,cAAMkC,EAAKE,MAAX,MACvBtC,EAAAC,EAAAC,cAAA,UAAQqC,QAASb,KAAKM,QAAtB,aAEIN,KAAKI,MAAMC,SACL/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAcJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,QAAQgC,EAAKI,eAAeC,SACtE,gBA3BnBhC,IAAMC,WCFZgC,EAAY,YCEZC,EAAiB,SAACC,GAC3B,MAAO,CACHC,KAAMH,EACNI,QAAS,CACLF,YAKCG,EAAwB,SAACC,GAClC,MAAO,CACHH,KDZyB,oBCazBC,QAAS,CACLE,UAKCC,EAAqB,WAC9B,MAAO,CACHJ,KDpBsB,iBCqBtBC,QAAS,KCvBJI,EAAmB,mBCEnBC,EAAwB,SAACP,GAElC,OADAQ,QAAQC,IAAI,gCACL,CACHR,KAAMK,EACNJ,QAAS,CACLF,YAKCU,EAA+B,SAACC,GACzC,MAAO,CACHV,KDbgC,2BCchCC,QAAS,CACLS,iBAKCC,EAA4B,WACrC,MAAO,CACHX,KDrB6B,wBCsB7BC,QAAS,KCxBJW,EAAqB,qBCErBC,EAA0B,SAACd,GAEpC,OADAQ,QAAQC,IAAI,kCACL,CACHR,KAAMY,EACNX,QAAS,CACLF,YAKCe,EAAiC,SAACC,GAC3C,MAAO,CACHf,KDbkC,6BCclCC,QAAS,CACLc,mBAKCC,EAA8B,WACvC,MAAO,CACHhB,KDrB+B,0BCsB/BC,QAAS,aCfXgB,cACF,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACfvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEiC,MAAO,IACtBxC,EAAKyC,QAAUzC,EAAKyC,QAAQ/B,KAAbT,OAAAU,EAAA,EAAAV,CAAAD,IAHAA,uEAMX0C,GAAW,IACPjB,EAAuDiB,EAAvDjB,KAAMO,EAAiDU,EAAjDV,YAAaK,EAAoCK,EAApCL,cAAeM,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAEnD,OADqBF,EAAUtE,SAAvByE,UAEJ,IAAK,QACEpB,GAAQqB,MAAMC,QAAQtB,IACrBtB,KAAKS,SAAS,CAAC4B,MAAOf,EAAKuB,MAAM,EAAG,MAExC,MACJ,IAAK,eACEhB,GAAec,MAAMC,QAAQf,IAC5B7B,KAAKS,SAAS,CAAC4B,MAAOR,EAAYgB,MAAM,EAAG,MAE/C,MACJ,IAAK,iBACEX,GAAiBS,MAAMC,QAAQV,IAC9BlC,KAAKS,SAAS,CAAC4B,MAAOH,EAAcW,MAAM,EAAG,MAEjD,MACJ,IAAK,WACEL,GAAWG,MAAMC,QAAQJ,IACxBxC,KAAKS,SAAS,CAAC4B,MAAOG,EAAQK,MAAM,EAAG,MAE3C,MACJ,IAAK,WACEJ,GAAWE,MAAMC,QAAQH,IACxBzC,KAAKS,SAAS,CAAC4B,MAAOI,EAAQI,MAAM,EAAG,yDAM7BN,GACtBb,QAAQC,IAAI,oCACZ3B,KAAKsC,QAAQC,+CAIbvC,KAAKsC,QAAQtC,KAAKJ,wCAIlB,OACII,KAAKI,MAAMiC,OAASrC,KAAKI,MAAMiC,MAAMS,OAAS,EAE1C9C,KAAKI,MAAMiC,MAAMU,IAAI,SAACrC,EAAMsC,GAAP,OAAa1E,EAAAC,EAAAC,cAACyE,EAAD,CAAMC,IAAKF,EAAGtC,KAAMA,MAEtDpC,EAAAC,EAAAC,cAAA,iCAtDIO,IAAMC,WA2EpBmE,EAAoB,CACtBlC,iBACAQ,wBACAO,2BAGWoB,cAAWC,YAlBF,SAAAjD,GAAK,MAAK,CAC9BkB,KAAMlB,EAAMkB,KACZO,YAAazB,EAAMyB,YACnBK,cAAe9B,EAAM8B,cACrBM,QAASpC,EAAMoC,QACfC,QAASrC,EAAMqC,UAagCU,EAAzBE,CAA4CjB,IC9EvDkB,mLANP,OACIhF,EAAAC,EAAAC,cAAA,+CAJKO,IAAMC,WCiCRuE,0LAtBP,OACIjF,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACgF,EAAD,MAEAlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACInF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,QAAWC,UAAWzB,IACvC9D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,eAAkBC,UAAWzB,IAC9C9D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,iBAAoBC,UAAWzB,IAChD9D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,WAAcC,UAAWzB,IAC1C9D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,WAAcC,UAAWzB,IAC1C9D,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,IAAOC,UAAW5E,IACnCX,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAOG,UAAWP,KAGtBhF,EAAAC,EAAAC,cAACsF,EAAD,cAlBE9E,oBCDEjB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+EChBO4F,EAAe,eCAfC,EAAe,uCCEbC,GAAA,CACXA,KAAM,CACFpC,YAAa,kBACTqC,IAAMC,IAAI,0CAA0CC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,MAAM,SAAAC,GAC5E,MAAM,IAAIC,MAAMD,MAGxBlD,KAAM,kBACF4C,IAAMC,IAAI,mCAAmCC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,MAAM,SAAAC,GACrE,MAAM,IAAIC,MAAMD,MAGxBtC,cAAe,kBACXgC,IAAMC,IAAI,4CAA4CC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,MAAM,SAAAC,GAC9E,MAAM,IAAIC,MAAMD,MAGxBhC,QAAS,kBACL0B,IAAMC,IAAI,sCAAsCC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,MAAM,SAAAC,GACxE,MAAM,IAAIC,MAAMD,MAGxB/B,QAAS,kBACLyB,IAAMC,IAAI,sCAAsCC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,MAAM,SAAAC,GACxE,MAAM,IAAIC,MAAMD,oBCtBfE,IAAV,SAAUA,GAAaC,GAAvB,IAAAC,EAAA,OAAAC,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoB9E,YAAK+E,GAAIjB,KAAK3C,KAAMqD,EAAOvD,QAAQF,QAFvD,UAEO0D,EAFPG,EAAAI,MAIIxC,MAAMC,QAAQgC,GAJlB,CAAAG,EAAAE,KAAA,QAKK,OALLF,EAAAE,KAAA,EAKWG,YAAI/D,EAAsBuD,IALrC,OAAAG,EAAAE,KAAA,gBAOK,OAPLF,EAAAE,KAAA,GAOWG,YAAI7D,EAAmBqD,IAPlC,QAAAG,EAAAE,KAAA,iBAWC,OAXDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAUCrD,QAAQC,IAAI,QAAZoD,EAAAM,IAVDN,EAAAE,KAAA,GAWOG,YAAI7D,EAAkBwD,EAAAM,KAX7B,yBAAAN,EAAAO,SAAAC,GAAA,+BCAUC,IAAV,SAAUA,GAAoBb,GAA9B,IAAAC,EAAA,OAAAC,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoB9E,YAAK+E,GAAIjB,KAAKpC,YAAa8C,EAAOvD,QAAQF,QAF9D,UAEO0D,EAFPG,EAAAI,MAIIxC,MAAMC,QAAQgC,GAJlB,CAAAG,EAAAE,KAAA,SAMK,OADAvD,QAAQC,IAAI,6BAA8BgD,EAAQC,GALvDG,EAAAE,KAAA,EAMWG,YAAIxD,EAA6BgD,IAN5C,OAAAG,EAAAE,KAAA,iBAQK,OARLF,EAAAE,KAAA,GAQWG,YAAItD,EAA0B8C,IARzC,QAAAG,EAAAE,KAAA,iBAYC,OAZDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAWCrD,QAAQC,IAAI,QAAZoD,EAAAM,IAXDN,EAAAE,KAAA,GAYOG,YAAItD,EAAyBiD,EAAAM,KAZpC,yBAAAN,EAAAO,SAAAG,GAAA,+BCAUC,IAAV,SAAUA,GAAsBf,GAAhC,IAAAC,EAAA,OAAAC,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoB9E,YAAK+E,GAAIjB,KAAK/B,cAAeyC,EAAOvD,QAAQF,QAFhE,UAEO0D,EAFPG,EAAAI,MAIIxC,MAAMC,QAAQgC,GAJlB,CAAAG,EAAAE,KAAA,SAMK,OADAvD,QAAQC,IAAI,+BAAgCgD,EAAQC,GALzDG,EAAAE,KAAA,EAMWG,YAAInD,EAA+B2C,IAN9C,OAAAG,EAAAE,KAAA,iBAQK,OARLF,EAAAE,KAAA,GAQWG,YAAIjD,EAA4ByC,IAR3C,QAAAG,EAAAE,KAAA,iBAYC,OAZDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAWCrD,QAAQC,IAAI,QAAZoD,EAAAM,IAXDN,EAAAE,KAAA,GAYOG,YAAIjD,EAA2B4C,EAAAM,KAZtC,yBAAAN,EAAAO,SAAAK,GAAA,eCFA,IAUMC,GAA2B,SAACpD,GACrC,MAAO,CACHrB,KNb4B,uBMc5BC,QAAS,CACLoB,aAKCqD,GAAwB,WACjC,MAAO,CACH1E,KNrByB,oBMsBzBC,QAAS,iBCpBA0E,IAAV,SAAUA,GAAgBnB,GAA1B,IAAAC,EAAA,OAAAC,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoB9E,YAAK+E,GAAIjB,KAAKzB,QAASmC,EAAOvD,QAAQF,QAF1D,UAEO0D,EAFPG,EAAAI,MAIIxC,MAAMC,QAAQgC,GAJlB,CAAAG,EAAAE,KAAA,SAMK,OADAvD,QAAQC,IAAI,yBAA0BgD,EAAQC,GALnDG,EAAAE,KAAA,EAMWG,YAAIQ,GAAyBhB,IANxC,OAAAG,EAAAE,KAAA,iBAQK,OARLF,EAAAE,KAAA,GAQWG,YAAIS,GAAsBjB,IARrC,QAAAG,EAAAE,KAAA,iBAYC,OAZDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAWCrD,QAAQC,IAAI,QAAZoD,EAAAM,IAXDN,EAAAE,KAAA,GAYOG,YAAIS,GAAqBd,EAAAM,KAZhC,yBAAAN,EAAAO,SAAAS,GAAA,eCFA,IAUMC,GAA2B,SAACvD,GACrC,MAAO,CACHtB,KPb4B,uBOc5BC,QAAS,CACLqB,aAKCwD,GAAwB,WACjC,MAAO,CACH9E,KPrByB,oBOsBzBC,QAAS,iBCpBA8E,IAAV,SAAUA,GAAgBvB,GAA1B,IAAAC,EAAA,OAAAC,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEc,OAFdF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEoB9E,YAAK+E,GAAIjB,KAAKxB,QAASkC,EAAOvD,QAAQF,QAF1D,UAEO0D,EAFPG,EAAAI,MAIIxC,MAAMC,QAAQgC,GAJlB,CAAAG,EAAAE,KAAA,SAMK,OADAvD,QAAQC,IAAI,yBAA0BgD,EAAQC,GALnDG,EAAAE,KAAA,EAMWG,YAAIY,GAAyBpB,IANxC,OAAAG,EAAAE,KAAA,iBAQK,OARLF,EAAAE,KAAA,GAQWG,YAAIa,GAAsBrB,IARrC,QAAAG,EAAAE,KAAA,iBAYC,OAZDF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAWCrD,QAAQC,IAAI,QAAZoD,EAAAM,IAXDN,EAAAE,KAAA,GAYOG,YAAIa,GAAqBlB,EAAAM,KAZhC,yBAAAN,EAAAO,SAAAa,GAAA,+BCWkBC,IAAV,SAAUA,KAAV,OAAAvB,EAAAtG,EAAAuG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OADWF,EAAAE,KAAA,EACLoB,YAAWrF,EAAW0D,IADjB,OAEX,OAFWK,EAAAE,KAAA,EAELoB,YAAW7E,EAAkBgE,IAFxB,OAGX,OAHWT,EAAAE,KAAA,EAGLoB,YAAWtE,EAAoB2D,IAH1B,OAIX,OAJWX,EAAAE,KAAA,EAILoB,YAAWtC,EAAc+B,IAJpB,OAKX,OALWf,EAAAE,KAAA,GAKLoB,YAAWrC,EAAckC,IALpB,yBAAAnB,EAAAO,SAAAgB,ICbf,ILAkCpF,GKA5BqF,GAAY,GAWHC,GATK,WAAoC,IAAnCpG,EAAmCqG,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,GAAW5B,EAAgB8B,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAC7C,OAAQ9B,EAAOxD,MACX,IrBLyB,oBqBMrB,OAAOwD,EAAOvD,QAAQE,KAC1B,QACI,OAAOlB,ICPbmG,GAAY,GAYHI,GAVY,WAAoC,IAAnCvG,EAAmCqG,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,GAAW5B,EAAgB8B,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACpD,OAAQ9B,EAAOxD,MACX,IpBLgC,2BoBO5B,OADAO,QAAQC,IAAI,4BAA6BgD,EAAOvD,SACzCuD,EAAOvD,QAAQS,YAC1B,QACI,OAAOzB,ICRbmG,GAAY,GAYHI,GAVY,WAAoC,IAAnCvG,EAAmCqG,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,GAAW5B,EAAgB8B,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GACpD,OAAQ9B,EAAOxD,MACX,InBLkC,6BmBO9B,OADAO,QAAQC,IAAI,4BAA6BgD,EAAOvD,SACzCuD,EAAOvD,QAAQc,cAC1B,QACI,OAAO9B,ICRbmG,GAAY,GAYHK,GAVQ,WAAoC,IAAnCxG,EAAmCqG,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,GAAW5B,EAAgB8B,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAChD,OAAQ9B,EAAOxD,MACX,IdL4B,uBcOxB,OADAO,QAAQC,IAAI,wBAAyBgD,EAAOvD,SACrCuD,EAAOvD,QAAQoB,QAC1B,QACI,OAAOpC,ICRbmG,GAAY,GAYHM,GAVQ,WAAoC,IAAnCzG,EAAmCqG,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAA3BF,GAAW5B,EAAgB8B,UAAA3D,OAAA,QAAA4D,IAAAD,UAAA,GAAAA,UAAA,GAAP,GAChD,OAAQ9B,EAAOxD,MACX,IdL4B,uBcOxB,OADAO,QAAQC,IAAI,wBAAyBgD,EAAOvD,SACrCuD,EAAOvD,QAAQqB,QAC1B,QACI,OAAOrC,ICmCb0G,GAAcC,YAAgB,CAChCzF,KAAMkF,GACN3E,YAAa8E,GACbzE,cAAe8E,GACfxE,QAASoE,GACTnE,QAASoE,KAOPI,GAAiBC,cASjBC,GAAoBnJ,OAAOoJ,UAAUC,UAAUC,SAAS,WAAatJ,OAAOuJ,mBAAqBnJ,EACjGoJ,YACEC,YAAgBR,IAChBjJ,OAAOuJ,mBAAqBvJ,OAAOuJ,qBAErCE,YAAgBR,IAShBS,GAAQC,YACVb,GACA,GACAK,IAEJF,GAAeW,IAAIxB,IAMnB1E,QAAQC,IAAI+F,GAAMG,YAoBdH,GAAMI,SAASrG,KACfiG,GAAMI,SAAS7G,KACfyG,GAAMI,SAAS9F,KACf0F,GAAMI,UV/GNpG,QAAQC,IAAI,4BACL,CACHR,KAAM4C,EACN3C,QAAS,CACLF,cU4GRwG,GAAMI,SRjHuB,SAAC5G,GAE9B,OADAQ,QAAQC,IAAI,4BACL,CACHR,KAAM6C,EACN5C,QAAS,CACLF,WQ4GO6G,IAOhB3J,GACCsJ,GAAMM,UAAU,WACZtG,QAAQC,IAAI,4BAA6B+F,GAAMG,cAQvDI,IAASC,OACL5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,KACI7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAUV,MAAOA,IACbpJ,EAAAC,EAAAC,cAAC6J,EAAD,QAGTC,SAASC,eAAe,ShCTrB,kBAAmBnB,WACrBA,UAAUoB,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.798c5ea4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.aed88df2.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const ENV = 'uat'; // api data\nexport const CLEAR_ORDER_AFTER_CREATION = true; // if true the order will be deleted from redux but will exist at Backend\nexport const ENVIRONMENT = {\n    DEV : true,\n    PROD: false,\n};\nexport const ODDS_UPDATE_INTERVAL = 9000; // milliseconds\nexport const STATS_UPDATE_INTERVAL = 5000; // milliseconds\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <nav id=\"main-nav\">\n                    <div className=\"wrapper\">\n                        <ul>\n                            <li>\n                                <Link to={'/'}>\n                                    <span>Home</span>\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to={'/news'}>\n                                    <span>News</span>\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to={'/interesting'}>\n                                    <span>Interesting</span>\n                                </Link>\n                            </li>\n                            <li>\n                                <Link to={'/contact'}>\n                                    <span>Contact</span>\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n                <div className=\"lead-banner\">\n                    <img src=\"http://placehold.it/1200x400\" className=\"App-logo\" alt=\"logo\"/>\n                    <div className=\"banner-content\">\n                        <div className=\"wrapper\">\n                            <span className=\"title\">Check our products</span>\n                            <span className=\"sub-title\">All about portfolio</span>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Services extends React.Component {\n    render() {\n        return (\n            <section id=\"services\">\n                <div className=\"wrapper\">\n                    <h1>Services</h1>\n                    <p></p>\n\n                    <ul className=\"focus-box\">\n                        <li>\n                            <Link to={'/news'}>\n                                <div className=\"service-icon\">\n                                    <i style={Styles.parraImg}\n                                       className=\"pixeden glyphicon\"></i>\n                                    <p id=\"cat\">خبریں</p>\n                                </div>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={'/interesting'}>\n                                <div className=\"service-icon\">\n                                    <i style={Styles.roundImg}\n                                       className=\"pixeden glyphicon\"></i>\n                                    <p id=\"cat\"> دلچسپ </p>\n                                </div>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={'/mazahia'}>\n                                <div className=\"service-icon\">\n                                    <i style={Styles.parraImg}\n                                       className=\"pixeden glyphicon\"></i>\n                                    <p id=\"cat\">مزاخیہ</p>\n                                </div>\n                            </Link>\n                        </li>\n\n                    </ul>\n\n                    <ul className=\"focus-box\">\n                        <li>\n                            <Link to={'/international'}>\n                                <div className=\"service-icon\">\n                                    <i style={Styles.parraImg}\n                                       className=\"pixeden glyphicon\"></i>\n                                    <p id=\"cat\">بین الاقوامی</p>\n                                </div>\n                            </Link>\n                        </li>\n                        <li>\n                            <Link to={'/science'}>\n                                <div className=\"service-icon\">\n                                    <i style={Styles.roundImg}\n                                       className=\"pixeden glyphicon\"></i>\n                                    <p id=\"cat\"> سائنس </p>\n                                </div>\n                            </Link>\n                        </li>\n                        <li>\n                            <div className=\"service-icon\">\n                                <i style={Styles.parraImg}\n                                   className=\"pixeden glyphicon\"></i>\n                                <p id=\"cat\"> ملک</p>\n                            </div>\n                        </li>\n\n                    </ul>\n\n                    <ul className=\"focus-box\">\n                        <li>\n                            <div className=\"service-icon\">\n                                <i style={Styles.parraImg}\n                                   className=\"pixeden glyphicon\"></i>\n                                <p id=\"cat\">مارشل</p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"service-icon\">\n                                <i style={Styles.roundImg}\n                                   className=\"pixeden glyphicon\"></i>\n                                <p id=\"cat\"> پیپلز </p>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"service-icon\">\n                                <i style={Styles.parraImg}\n                                   className=\"pixeden glyphicon\"></i>\n                                <p id=\"cat\"> ملک</p>\n                            </div>\n                        </li>\n\n                    </ul>\n\n                </div>\n            </section>\n        )\n    }\n}\n\nconst Styles = {\n    roundImg: {\n        background: \"url(images/ti-logo.png) no-repeat center\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n\n    parraImg: {\n        background: \"url(images/parallax.png) no-repeat center\",\n        width: \"100%\",\n        height: \"100%\"\n    }\n};\nexport default Services;\n","import React from 'react';\nimport banner from \"../banner.png\";\n\nclass Banner extends React.Component {\n    render() {\n        return (\n            <div className=\"middle-banner\">\n                <img src={banner} className=\"App-logo\" alt=\"logo\" />\n                <div className=\"banner-content\">\n                    <div className=\"wrapper\">\n                        <ul>\n                            <li>This is first line on our banner</li>\n                            <li>This is second line on our banner</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Banner;","import React from 'react';\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { expanded: false };\n        this.expand = this.expand.bind(this);\n    }\n\n    expand() {\n        this.setState({ expanded: !this.state.expanded });\n\n    }\n\n    render() {\n        const { item } = this.props;\n        return (\n            <section id=\"cards\">\n                <div className=\"wrapper\">\n                    <div className=\"card\">\n                        <div>\n                            <img src={item.image} alt=\"Image\" />\n                        </div>\n                        <div className=\"content\">\n                            <div className=\"title\"><h2> {item.title} </h2></div>\n                            <button onClick={this.expand}>Show more</button>\n                            {\n                                this.state.expanded\n                                    ? <div className=\"description\"><p className=\"urdu\">{item.contentSnippet.trim()}</p></div>\n                                    : null\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default Card;\n","export const NEWS_READ = 'News.Read';\nexport const NEWS_READ_SUCCESS = 'News.Read.Success';\nexport const NEWS_READ_FAIL = 'News.Read.Fail';\n","import { NEWS_READ, NEWS_READ_SUCCESS, NEWS_READ_FAIL } from '../types/News';\n\nexport const newsReadAction = (newsId) => {\n    return {\n        type: NEWS_READ,\n        payload: {\n            newsId\n        }\n    }\n};\n\nexport const newsReadSuccessAction = (news) => {\n    return {\n        type: NEWS_READ_SUCCESS,\n        payload: {\n            news\n        }\n    }\n};\n\nexport const newsReadFailAction = () => {\n    return {\n        type: NEWS_READ_FAIL,\n        payload: {}\n    }\n};\n","export const INTERESTING_READ = 'Interesting.Read';\nexport const INTERESTING_READ_SUCCESS = 'Interesting.Read.Success';\nexport const INTERESTING_READ_FAIL = 'Interesting.Read.Fail';\n","import { INTERESTING_READ, INTERESTING_READ_SUCCESS, INTERESTING_READ_FAIL } from '../types/Interesting';\n\nexport const interestingReadAction = (newsId) => {\n    console.log('Inside interestingReadAction');\n    return {\n        type: INTERESTING_READ,\n        payload: {\n            newsId\n        }\n    }\n};\n\nexport const interestingReadSuccessAction = (interesting) => {\n    return {\n        type: INTERESTING_READ_SUCCESS,\n        payload: {\n            interesting\n        }\n    }\n};\n\nexport const interestingReadFailAction = () => {\n    return {\n        type: INTERESTING_READ_FAIL,\n        payload: {}\n    }\n};\n","export const INTERNATIONAL_READ = 'International.Read';\nexport const INTERNATIONAL_READ_SUCCESS = 'International.Read.Success';\nexport const INTERNATIONAL_READ_FAIL = 'International.Read.Fail';\n","import { INTERNATIONAL_READ, INTERNATIONAL_READ_SUCCESS, INTERNATIONAL_READ_FAIL } from '../types/International';\n\nexport const internationalReadAction = (newsId) => {\n    console.log('Inside internationalReadAction');\n    return {\n        type: INTERNATIONAL_READ,\n        payload: {\n            newsId\n        }\n    }\n};\n\nexport const internationalReadSuccessAction = (international) => {\n    return {\n        type: INTERNATIONAL_READ_SUCCESS,\n        payload: {\n            international\n        }\n    }\n};\n\nexport const internationalReadFailAction = () => {\n    return {\n        type: INTERNATIONAL_READ_FAIL,\n        payload: {}\n    }\n};\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport Card from './Card';\nimport { newsReadAction } from '../actions/NewsAction';\nimport { interestingReadAction } from '../actions/InterestingAction';\nimport { internationalReadAction } from '../actions/InternationalAction';\nimport {withRouter} from \"react-router-dom\";\n\nclass Cards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { items: [] };\n        this.getData = this.getData.bind(this);\n    }\n\n    getData(nextProps) {\n        const { news, interesting, international, science, mazahia } = nextProps;\n        const { pathname } = nextProps.location;\n        switch(pathname) {\n            case '/news':\n                if(news && Array.isArray(news)) {\n                    this.setState({items: news.slice(0, 15)});\n                }\n                break;\n            case '/interesting':\n                if(interesting && Array.isArray(interesting)) {\n                    this.setState({items: interesting.slice(0, 15)});\n                }\n                break;\n            case '/international':\n                if(international && Array.isArray(international)) {\n                    this.setState({items: international.slice(0, 15)});\n                }\n                break;\n            case '/science':\n                if(science && Array.isArray(science)) {\n                    this.setState({items: science.slice(0, 15)});\n                }\n                break;\n            case '/mazahia':\n                if(mazahia && Array.isArray(mazahia)) {\n                    this.setState({items: mazahia.slice(0, 15)});\n                }\n                break;\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log('Inside componentWillReceiveProps');\n        this.getData(nextProps);\n    }\n\n    componentDidMount() {\n        this.getData(this.props);\n    }\n\n    render() {\n        return (\n            this.state.items && this.state.items.length > 0\n                ?\n                this.state.items.map((item, i) => <Card key={i} item={item} />)\n                :\n                <div>Loading ...</div>\n        )\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    news: state.news,\n    interesting: state.interesting,\n    international: state.international,\n    science: state.science,\n    mazahia: state.mazahia,\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    newsReadAction,\n    interestingReadAction,\n    internationalReadAction\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Cards));\n\n","import React from 'react';\n\n\nclass Ni extends React.Component {\n\n    render() {\n        return(\n            <div>Not Implemented component</div>\n        )\n    }\n}\n\nexport default Ni;\n","import React, {Component} from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Services from './components/Services';\nimport Banner from './components/Banner';\nimport Cards from './components/Cards';\nimport Ni from './components/Ni';\n\nimport './sass/styles.css';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n\n                <Header/>\n\n                <Switch>\n                    <Route exact path={`/news`} component={Cards} />\n                    <Route exact path={`/interesting`} component={Cards} />\n                    <Route exact path={`/international`} component={Cards} />\n                    <Route exact path={`/science`} component={Cards} />\n                    <Route exact path={`/mazahia`} component={Cards} />\n                    <Route exact path={`/`} component={Services} />\n                    <Route component={Ni} />\n                </Switch>\n\n                <Banner/>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SCIENCE_READ = 'Science.Read';\nexport const SCIENCE_READ_SUCCESS = 'Science.Read.Success';\nexport const SCIENCE_READ_FAIL = 'Science.Read.Fail';\n","export const MAZAHIA_READ = 'Mazahia.Read';\nexport const MAZAHIA_READ_SUCCESS = 'Mazahia.Read.Success';\nexport const MAZAHIA_READ_FAIL = 'Mazahia.Read.Fail';\n","import axios from 'axios';\n\nexport default {\n    feed: {\n        interesting: () =>\n            axios.get('http://localhost:8080/urdu/interesting').then(res => res.data).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            }),\n        news: () =>\n            axios.get('http://localhost:8080/urdu/news').then(res => res.data).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            }),\n        international: () =>\n            axios.get('http://localhost:8080/urdu/international').then(res => res.data).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            }),\n        science: () =>\n            axios.get('http://localhost:8080/urdu/science').then(res => res.data).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            }),\n        mazahia: () =>\n            axios.get('http://localhost:8080/urdu/mazahia').then(res => res.data).catch(error => {\n                throw new Error(error);\n                console.dir(error);\n            }),\n    }\n}\n","import { call, put } from 'redux-saga/effects';\nimport api from '../api/feed';\nimport { newsReadSuccessAction, newsReadFailAction } from \"../actions/NewsAction\";\n\nexport function* newsReadSaga(action) {\n    try {\n        const resp = yield call(api.feed.news, action.payload.newsId);\n\n        if(Array.isArray(resp)) {\n            yield put(newsReadSuccessAction(resp));\n        } else {\n            yield put(newsReadFailAction(resp));\n        }\n    } catch (err) {\n        console.log('error', err);\n        yield put(newsReadFailAction(err));\n    }\n}\n","import { call, put } from 'redux-saga/effects';\nimport api from '../api/feed';\nimport { interestingReadSuccessAction, interestingReadFailAction } from \"../actions/InterestingAction\";\n\nexport function* interestingReadSaga(action) {\n    try {\n        const resp = yield call(api.feed.interesting, action.payload.newsId);\n\n        if(Array.isArray(resp)) {\n            console.log('Inside interestingReadSaga', action, resp);\n            yield put(interestingReadSuccessAction(resp));\n        } else {\n            yield put(interestingReadFailAction(resp));\n        }\n    } catch (err) {\n        console.log('error', err);\n        yield put(interestingReadFailAction(err));\n    }\n}\n","import { call, put } from 'redux-saga/effects';\nimport api from '../api/feed';\nimport { internationalReadSuccessAction, internationalReadFailAction } from \"../actions/InternationalAction\";\n\nexport function* internationalReadSaga(action) {\n    try {\n        const resp = yield call(api.feed.international, action.payload.newsId);\n\n        if(Array.isArray(resp)) {\n            console.log('Inside internationalReadSaga', action, resp);\n            yield put(internationalReadSuccessAction(resp));\n        } else {\n            yield put(internationalReadFailAction(resp));\n        }\n    } catch (err) {\n        console.log('error', err);\n        yield put(internationalReadFailAction(err));\n    }\n}\n","import { SCIENCE_READ, SCIENCE_READ_SUCCESS, SCIENCE_READ_FAIL } from '../types/Science';\n\nexport const scienceReadAction = (newsId) => {\n    console.log('Inside scienceReadAction');\n    return {\n        type: SCIENCE_READ,\n        payload: {\n            newsId\n        }\n    }\n};\n\nexport const scienceReadSuccessAction = (science) => {\n    return {\n        type: SCIENCE_READ_SUCCESS,\n        payload: {\n            science\n        }\n    }\n};\n\nexport const scienceReadFailAction = () => {\n    return {\n        type: SCIENCE_READ_FAIL,\n        payload: {}\n    }\n};\n","import { call, put } from 'redux-saga/effects';\nimport api from '../api/feed';\nimport { scienceReadSuccessAction, scienceReadFailAction } from \"../actions/ScienceAction\";\n\nexport function* scienceReadSaga(action) {\n    try {\n        const resp = yield call(api.feed.science, action.payload.newsId);\n\n        if(Array.isArray(resp)) {\n            console.log('Inside scienceReadSaga', action, resp);\n            yield put(scienceReadSuccessAction(resp));\n        } else {\n            yield put(scienceReadFailAction(resp));\n        }\n    } catch (err) {\n        console.log('error', err);\n        yield put(scienceReadFailAction(err));\n    }\n}\n","import { MAZAHIA_READ, MAZAHIA_READ_SUCCESS, MAZAHIA_READ_FAIL } from '../types/Mazahia';\n\nexport const mazahiaReadAction = (newsId) => {\n    console.log('Inside mazahiaReadAction');\n    return {\n        type: MAZAHIA_READ,\n        payload: {\n            newsId\n        }\n    }\n};\n\nexport const mazahiaReadSuccessAction = (mazahia) => {\n    return {\n        type: MAZAHIA_READ_SUCCESS,\n        payload: {\n            mazahia\n        }\n    }\n};\n\nexport const mazahiaReadFailAction = () => {\n    return {\n        type: MAZAHIA_READ_FAIL,\n        payload: {}\n    }\n};\n","import { call, put } from 'redux-saga/effects';\nimport api from '../api/feed';\nimport { mazahiaReadSuccessAction, mazahiaReadFailAction } from \"../actions/MazahiaAction\";\n\nexport function* mazahiaReadSaga(action) {\n    try {\n        const resp = yield call(api.feed.mazahia, action.payload.newsId);\n\n        if(Array.isArray(resp)) {\n            console.log('Inside mazahiaReadSaga', action, resp);\n            yield put(mazahiaReadSuccessAction(resp));\n        } else {\n            yield put(mazahiaReadFailAction(resp));\n        }\n    } catch (err) {\n        console.log('error', err);\n        yield put(mazahiaReadFailAction(err));\n    }\n}\n","import { NEWS_READ  } from '../types/News';\nimport { INTERESTING_READ  } from '../types/Interesting';\nimport {INTERNATIONAL_READ} from \"../types/International\";\nimport {SCIENCE_READ} from \"../types/Science\";\nimport {MAZAHIA_READ} from \"../types/Mazahia\";\n\nimport { takeLatest, takeEvery} from 'redux-saga/effects';\n\nimport { newsReadSaga } from \"./newsSagas\";\nimport { interestingReadSaga } from \"./interestingSagas\";\nimport { internationalReadSaga } from \"./internationalSagas\";\nimport { scienceReadSaga } from \"./scienceSagas\";\nimport { mazahiaReadSaga } from \"./mazahiaSagas\";\n\n\nexport default function* rootSaga() {\n    yield takeLatest(NEWS_READ, newsReadSaga);\n    yield takeLatest(INTERESTING_READ, interestingReadSaga);\n    yield takeLatest(INTERNATIONAL_READ, internationalReadSaga);\n    yield takeLatest(SCIENCE_READ, scienceReadSaga);\n    yield takeLatest(MAZAHIA_READ, mazahiaReadSaga);\n}\n","import { NEWS_READ_SUCCESS } from '../types/News';\n\nconst initState = [];\n\nconst NewsReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case NEWS_READ_SUCCESS:\n            return action.payload.news;\n        default:\n            return state;\n    }\n};\n\nexport default NewsReducer;\n","import { INTERESTING_READ_SUCCESS } from '../types/Interesting';\n\nconst initState = [];\n\nconst InterestingReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case INTERESTING_READ_SUCCESS:\n            console.log('Inside InterestingReducer', action.payload);\n            return action.payload.interesting;\n        default:\n            return state;\n    }\n};\n\nexport default InterestingReducer;\n","import { INTERNATIONAL_READ_SUCCESS } from '../types/International';\n\nconst initState = [];\n\nconst InterestingReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case INTERNATIONAL_READ_SUCCESS:\n            console.log('Inside InterestingReducer', action.payload);\n            return action.payload.international;\n        default:\n            return state;\n    }\n};\n\nexport default InterestingReducer;\n","import { SCIENCE_READ_SUCCESS } from '../types/Science';\n\nconst initState = [];\n\nconst ScienceReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case SCIENCE_READ_SUCCESS:\n            console.log('Inside ScienceReducer', action.payload);\n            return action.payload.science;\n        default:\n            return state;\n    }\n};\n\nexport default ScienceReducer;\n","import { MAZAHIA_READ_SUCCESS } from '../types/Mazahia';\n\nconst initState = [];\n\nconst MazahiaReducer = (state = initState, action = {}) => {\n    switch (action.type) {\n        case MAZAHIA_READ_SUCCESS:\n            console.log('Inside MazahiaReducer', action.payload);\n            return action.payload.mazahia;\n        default:\n            return state;\n    }\n};\n\nexport default MazahiaReducer;\n","/**\n * Standard packages\n */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, compose, combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n/**\n * Our custom components / packages\n */\nimport { ENVIRONMENT } from \"./common/behaviour\";\nimport App from './App';\nimport { newsReadAction } from \"./actions/NewsAction\";\nimport { interestingReadAction } from \"./actions/InterestingAction\";\n\n/**\n * Resources\n */\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\n\n// # 01\n/**\n * A reducer is a function that operates on the state object and then returns it\n * Please note that this function is also called during initialization of store - so any code\n * without if stmt will be executed multiple times - internal operation of store !\n * @param state - this is a misleading name - here it is not the full state but just corresponding key value\n * @param action\n * @returns {Array} - every return value is assigned to the corresponding key in allReducers\n */\nimport rootSaga from './sagas/rootSaga';\nimport NewsReducer from \"./reducers/NewsReducer\";\nimport InterestingReducer from \"./reducers/InterestingReducer\";\nimport InternationalReducer from \"./reducers/InternationalReducer\";\nimport {internationalReadAction} from \"./actions/InternationalAction\";\nimport {scienceReadAction} from \"./actions/ScienceAction\";\nimport ScienceReducer from \"./reducers/ScienceReducer\";\nimport MazahiaReducer from \"./reducers/MazahiaReducer\";\nimport {mazahiaReadAction} from \"./actions/MazahiaAction\";\n\nconst allReducers = combineReducers({\n    news: NewsReducer,\n    interesting: InterestingReducer,\n    international: InternationalReducer,\n    science: ScienceReducer,\n    mazahia: MazahiaReducer\n});\n\n// # 02\n/**\n * Sagas to connect to external world - async api calls\n */\nconst sagaMiddleware = createSagaMiddleware();\n\n// # 03\n/**\n * Store enhancers, devToolsExtensions\n */\n// Fixing error : TypeError: t is undefined\n// Only chrome can handle the redux dev tool\n// Redux compose cannot handle a null or undefined middleware\nconst allStoreEnhancers = window.navigator.userAgent.includes('Chrome') && window.devToolsExtension && ENVIRONMENT.DEV\n    ? compose(\n        applyMiddleware(sagaMiddleware),\n        window.devToolsExtension && window.devToolsExtension()\n    )\n    : applyMiddleware(sagaMiddleware);\n\n// # 04\n/**\n * Create store with allReducers which are all called one by one when there is dispatch\n * Second param is initial state of store\n * Last param is for redux debug in chrome extension\n * @type {Store<S&StateExt>&Ext}\n */\nconst store = createStore(\n    allReducers,\n    {},\n    allStoreEnhancers\n);\nsagaMiddleware.run(rootSaga);\n\n// # 05\n/**\n * You can see the status of store - but only data and not reducers\n */\nconsole.log(store.getState());\n\n// # 06\n/**\n * Action is an object with format of type and payload\n * @type {{type: string, payload: {newState: string}}}\n * Dispatch action to store\n */\n\n/*\n* no need here moved to App component for unified standard place for all these actions\nstore.dispatch(eventStatsUpdateAction());\nlet statsUpdate = localStorage.getItem('statsUpdate');\nclearInterval(statsUpdate);\nstatsUpdate = setInterval(() => store.dispatch(eventStatsUpdateAction()), 6000);\nlocalStorage.setItem('statsUpdate', statsUpdate);\n*/\n\n// Read news\nif(true || ENVIRONMENT.DEV) {\n    store.dispatch(interestingReadAction());\n    store.dispatch(newsReadAction());\n    store.dispatch(internationalReadAction());\n    store.dispatch(scienceReadAction());\n    store.dispatch(mazahiaReadAction());\n}\n\n/**\n * Avoid setting up multiple interval objects in background\n * @type {string | null}\n */\nif(ENVIRONMENT.DEV) {\n    store.subscribe(() => {\n        console.log('subscribed store in index', store.getState());\n    });\n}\n\n/**\n * Render the main App Component\n */\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render((\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}